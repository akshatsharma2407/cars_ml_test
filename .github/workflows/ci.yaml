name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code 
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Cache pip dependescies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        
      - name: update pip 
        run: |
          pip install --upgrade pip

      - name: install dependescies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          DAGSHUB_PAT: ${{secrets.DAGSHUB_PAT}}
        run: |
          dvc repro
      
      - name: run model tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          python -m unittest tests/test_model.py
      
      - name: promote model 
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: | 
          python src/models/promote_model.py
      
      - name: run fastapi test
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: | 
          python -m unittest tests/test_fastapi.py
      
      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set default.region "ap-south-1"
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 851725541946.dkr.ecr.ap-south-1.amazonaws.com
      
      - name: build docker image
        run: |
          docker build -t autonexus_ecr_image .
      
      - name: tag docker autonexus_ecr_image
        run: |
          docker tag autonexus_ecr_image:latest 851725541946.dkr.ecr.ap-south-1.amazonaws.com/autonexus_ecr_image:latest
      
      - name: push docker image to ECR
        run: |
          docker push 851725541946.dkr.ecr.ap-south-1.amazonaws.com/autonexus_ecr_image:latest

      # Zip the required files
      - name: Zip files for deployment
        if: success()
        run: |
          zip -r deployment.zip appspec.yml deploy/scripts/install_dependencies.sh deploy/scripts/start_docker.sh

      # Upload the ZIP file to S3
      - name: Upload ZIP to S3
        if: success()
        run: |
          aws s3 cp deployment.zip s3://autonexuscodedeploybucket/deployment.zip

      # Deploy to AWS CodeDeploy using the uploaded ZIP file
      - name: Deploy to AWS CodeDeploy
        if: success()
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws deploy create-deployment \
            --application-name Mydockerapp2 \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name MyDockerAppASGDeploymentGroup \
            --s3-location bucket=autonexuscodedeploybucket,key=deployment.zip,bundleType=zip \
            --file-exists-behavior OVERWRITE \
            --region ap-south-1
